Reference link : https://www.youtube.com/watch?v=k0iTgTuiEGY&list=PLsyeobzWxl7pe_IiTfNyr55kwJPWbgxB5&index=71

My notes: 

- Enum are named constants we create.
- Enum - Enumeration.
- Java treats Enum name as a class and the constants we create as object.
- we can also call the constants by their inddex
- Enum constanst's indexing starts from 0
- we cam get the constants index by using the keyword ordinal();
- EnumName.value() -> this stores the constants in an array, we can call each of them using index.
- We can also use Enhanced for loop to print all the constants





🎯 Key Takeaways for quick navigation:

00:00 📚 Introduction to Enums in Java
- Enums represent a list of constant variables in Java.
- They enhance code readability and provide a convenient way to manage related constants.
- Enums are not strictly necessary but offer benefits in terms of code organization and clarity.
00:42 🛠️ Basic Usage of Enums
- Declaring and defining enums inside Java classes.
- Accessing enum values and using them in conditional statements.
- Common practice includes capitalizing enum values for clarity and consistency.
02:24 🔄 Utilizing Enum Methods
- Exploring the `values()` method to obtain an array of all enum constants.
- Demonstrating how enums can mimic certain class functionalities.
- Assigning additional properties to enum constants, enhancing their versatility.
04:34 📊 Understanding Enum Ordinal
- The `ordinal()` method returns the position of an enum constant in its declaration.
- Enum constants are assigned ordinal values based on their declaration order.
- Leveraging ordinal values for conditional checks and logical operations.


Official notes provided by prof:

In this lecture we will learn:
Enumeration in Java
What is an enum in Java?
How to use an enum in Java?
Methods used with enum

#1
Enum is a short term used for Enumeration.
Enumerations serve the purpose of representing a group of named constants in a programming language.

#2
-Java Enums can be thought of as classes that have a fixed set of constants 
Enum is named constants that we create for specific constants or error codes.
Enum is created in place of an object for constants.
Enum is pre-defined that contains all name constants.
Enums are used to create our data type like classes.
In enum, instead of returning a string format or a specific object, we can simply return a status or a value present inside an enum.
e.g.,  enum Status{
   Running, Failed, Pending, Success;
  }
enum is also treated as a class in Java. Objects can also be created for enum like:
 Status s= Status.Running;
Every enum constant represents an object of type enum.
enum type can be passed as an argument to switch statement

#3
In enum, all the name constants are defined by using numbers.
ordinal() method is used to get the index of the name constant present in the enum.
values() method is used to get all the statuses or name constants of enums.
 Status [][] s= Status.values();
*values() method will give an array.


