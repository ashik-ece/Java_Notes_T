Reference link : https://www.youtube.com/watch?v=4YnGBOyA2Q4&list=PLsyeobzWxl7pe_IiTfNyr55kwJPWbgxB5&index=67

my notes :

- when we use interfaces or abstract classes, we use this concept
- if we want to implement the interface or abstract class only once, then we can use anonyous inner class.
- we can use anonymous inner class for abstract class as well.
- even if have multiple methods, we can still use Annoymous inner class.
    - lets say we have two abstract methods inside a abstract class A. by using Anonymous inner class, we can implement(define) both the the methods for that object.

    - eg :

      abstract class A 
      {
        public void show();
        public void config();
      }

      public class Demo 
      {
        public static void main(String[] args) 
          {
            A obj = new A() 
              {
               public void show() {
                  System.out.println("In New Show");
                }
                  
               public void config() {

                     System.out.println("in config");
                 }
                
              }
          }
      }

      the output shall be In New show and in config.
      by this we can see that, we can implement multiple abstract methods of a abstract class with the help of Anonymous Inner class.

- in abstact class, we saw B extends A, and we used the abstract method in B. (because we cant create objects of abstract class.
  - but , this is inefficient, because we are creating a new class B only just to use the abstract method, so one way to make it efficient is to make use of Anonymous Inner Class.
    we dont need to create class B.
- even if we use A obj = new A() {Anonymous class}; even though we using new A(), we are not creating the object of A (we cant create object of Abstract class).
    - We are creating the object of the Anonymous Inner class and not from abstract class A.

Official notes provided by prof: 

In this lecture we will learn:
Abstract and anonymous inner class
Use of anonymous class with an abstract class
Example of abstract and anonymous inner class.

#1
When you want to use an interface and an abstract class only once, then you can simply use an anonymous innner class in place of that.
You can also provide the implementation for multiple methods in an anonymous inner class.
Anonymous inner class can implement only one interface at s time.
Anonymous inner class can either extend a class or implement an interface at a time.
We can create object for abstract class by providing the implementation of an abstract method in an anonymous inner class.


e.g.,
abstract class A
{
 public abstract void show();
}

In main methid:
A obj=new A()
{
 public void shoe()
 {
  statement;
 }
};
