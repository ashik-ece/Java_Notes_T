SERVLETS : 

What is a Servlet?
A servlet is a Java class that handles HTTP requests and responses.
It runs on a web server (like Apache Tomcat) and is used to create dynamic web content. 
Servlets extend the HttpServlet class, which provides methods to handle HTTP requests (GET, POST, etc.).


How a Servlet Works:
Receives Request: The servlet receives an HTTP request from the client (e.g., a web browser). The client sends the request to the server, and the server forwards it to the appropriate servlet.

Processes Request: The servlet processes the request (e.g., retrieves data from a database, performs calculations, etc.).

Sends Response: The servlet sends an HTTP response back to the client (e.g., HTML, JSON, etc.).

Key Points:
The client (e.g., a browser) sends the HTTP request to the server.

The server forwards the request to the servlet.

The servlet processes the request and sends a response back to the client via the server.


Servlet Request Flow:

Client Sends Request:

        The client (e.g., a web browser) sends an HTTP request (e.g., GET or POST) to the web server (e.g., Apache Tomcat).

Server Receives Request:

        The web server receives the HTTP request from the client.

Server Forwards Request to Servlet:

        The web server determines which servlet should handle the request based on the URL mapping (defined in web.xml or annotations).

        The server then forwards the request to the appropriate servlet.

Servlet Processes Request:

        The servlet receives the request from the server.

It processes the request (e.g., reads parameters, interacts with a database, etc.).

        It generates a response (e.g., HTML, JSON, etc.).

Servlet Sends Response to Server:

        The servlet sends the response back to the server.

Server Sends Response to Client:
        The server sends the response back to the client

Key Points:
The servlet does not directly communicate with the client. It only interacts with the server.

The server acts as an intermediary between the client and the servlet.

The servlet receives the request from the server, processes it, and sends the response back to the server, which then forwards it to the client.



MY NOTES :

- when the client sends the request to the server, expecting a page, which can be static or dynamic. (the client can ask anything on the internet, but lets say it asks a static page)
- static : already made
  dynamic : made at runtime

Static page:
- the client sends the request asking for a static page, it goes to the server, on the server we already have the file and that file goes to the client as a response. REQUEST DONE.
Dynamic page:
- the client sends the request to the server, asking for a dynamic which is made at runtime, the request goes to the server, but the server dont have that file, so the server have to
  make that page, it has to build that page, so that request goes to the helper application (web container)
- this helper application is also called as web container.
- Web container : Apache tomcat
- In this web container, we will be having servlets.

WHAT IS A SERVLET : A servlet is a Java file which can take the request from the client on the internet and it can process the request and provide a response in the format of 
                    html page (common for web response), json , XML, etc

- If we want a dynamic file lets say abc.html, since that file doesnt already exist in the server, the server sends the request to the web container (helper application)
- in the web container , there are servlets which will process the request and send response.     
        - BUT, in a web container there are N number of Servlets, each having its own function, how do we send the request for abc.html to the correct servlet that process abc.html?
                - we do that with the help of Deployment Descriptor (DD) - Web.xml
- in the web.xml, we mention, for which request, which servlet should be called.
        - every request will be mapped with a servlet. (with the use of web.xml file)
- in web.xml file, we have two tag
        - Servlet tag : Mention class-name
        - Servlet mapping tag : url-pattern (for this url we need to that particular servlet)

- How to create servlet :
        - its a normal class which extends HttpServlet (this httpServlet will provide us all the features that we need)
            - features as in : 
                - takes request from the server (which in turns takes the request from the client)
                - processing the request
                - sending the response

- that response will be in HTML, JSON, XML format
- so that response page (abc.html) will go to the server and back to the client in the form of  response object.

HOW TO AVOID WEB.XML:
        - In Servlet 3.0, we got a new feature called as Annotations.
        - with the help of annotations we can map the servlets to a specific request/url without needing web.xml
        - so we dont need web.xml
        - annotations help with mapping of servlets.



