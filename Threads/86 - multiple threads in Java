Reference link : https://www.youtube.com/watch?v=UfMM924sBvg&list=PLsyeobzWxl7pe_IiTfNyr55kwJPWbgxB5&index=89

my notes :

- most of the time we dont need to create thread, when we use a framework, that framework will create threds for us.
- we cannot execute normal objects in multiple threads ; We cannot execute normal objects simuntaneously.
- so we have to make our normal objects into threads.
- if we want to make classes/objects as threads, we have to extend(inherit) that class with Thread class
- now those object references are threads.
- in every thread, we must have a run() method.
- and to have the threads run at the same time, we need to call not by the method name , but by start (obj.start())

- basically, whatever we want to run using thread, we put it in run method() inside a class and make that class extend Thread Class. In the main function, create an object of that class and call that run method using start method. [obj.start()]


- when we use threads, schedular comes , and it uses time sharing to decide which program is executed,
- schedular : it schedules which thread to execute on OS.

Official Notes provided by Prof:

In this lecture we will learn:
Multiple Threads in Java
How to create a thread?
How we can do parallel programming?
start() and run() methods in multithreading
Time-sharing between multiple threads


#1
When you build an application, we use certain frameworks and behind the scene, these frameworks will create threads.
Every statement runs in a sequence in the main method.
If you want to execute two behaviours to execute at the same time, then we can use threads.
We can not execute normal objects in multiple threads or normal objects can not be executed simultaneously.

#2
Java provides a Thread class to achieve thread programming. The thread class provides constructors and methods to create and perform operations on a thread.
A thread can be created by extending the thread class. The thread class can be extended through the Thread keyword.
By using the Thread keyword with class, it will not create a new thread.

#3
We have to use the start() method in the main to start the execution of a new thread.
start() is a method that is present inside the thread class. start() method only calls the run method.
Start() invokes the run() method on the Thread object.
run method should be present inside every thread to start a new thread.
run() method is used to do an action for a thread.

#4
All threads cannot run at the same time, so threads go for the time sharing.
-In this time-sharing Operating system, many processes are allocated with computer resources in respective time slots. 
Scheduler is responsible to allow which thread to execute at what time. 
